cmake_minimum_required(VERSION 3.26)
add_definitions(-std=c++20)
set(CMAKE_CXX_STANDARD 20)

project(SFMLPractice)


file(GLOB SOURCES "src/*.cpp")
option(BUILD_SHARED_LIBS "Build shared libraries" ON)
include_directories("C:/SFML-2.6.1/MinGW (32 bit)/include")

if(MSVC)
	link_directories("C:/SFML-2.6.1/Visual Stuio (32 bit)/lib")
	set(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/MSVC)
	set(VS_DEBUGGER_WORKING_DIRECTORY ${CMAKE_BINARY_DIR})
	add_executable(${PROJECT_NAME} WIN32  ${SOURCES})
	target_link_libraries(${PROJECT_NAME} sfml-graphics.lib sfml-window.lib sfml-audio.lib sfml-main.lib sfml-network.lib openal32.lib sfml-system.lib)
else()
	link_directories("C:/SFML-2.6.1/MinGW (32 bit)/lib")
	set(EXECUTABLE_OUTPUT_PATH ${CMAKE_SOURCE_DIR}/bin)
	add_executable(${PROJECT_NAME} WIN32 ${SOURCES})
	target_link_libraries(${PROJECT_NAME} libsfml-graphics.a libsfml-window.a libsfml-audio.a libsfml-main.a libsfml-network.a libopenal32.a libsfml-system.a)
endif()
